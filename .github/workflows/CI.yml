name: CI

on:
  push:
    branches:
      - master
    paths-ignore:
      - '*.md'
      - '*.yml'
  pull_request:
    paths-ignore:
      - '*.md'
      - '*.yml'

jobs:
  Init:
    runs-on: ubuntu-latest
    steps:
    - name: Create build tag
      run: |
        export BUILD_TAG=build-$(date -u +'%Y%m%d%H%M')
        echo "BUILD_TAG=$BUILD_TAG" >> $GITHUB_ENV
        echo -n $BUILD_TAG > tag
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: tag
        path: tag

  build-windows:
    runs-on: windows-latest
    needs: Init
    env:
      POWERSHELL_TELEMETRY_OPTOUT: 1
    strategy:
      fail-fast: false
      matrix:
        configuration: [Release, Debug]
        arch: [x86, x64]
        include:
          - arch: x86
            platform: Win32
            artifact_os: Win32
          - arch: x64
            platform: x64
            artifact_os: Win64
    steps:
    - uses: actions/checkout@v2
    - name: CMake generate
      run: |
        mkdir build && cd build
        cmake .. -A ${{ matrix.platform }}
    - name: Build
      working-directory: build
      run: cmake --build . --config ${{ matrix.configuration }} -j $env:NUMBER_OF_PROCESSORS
    - name: Prepare artifacts
      run: |
        mkdir artifacts
        mv -vb build\${{ matrix.configuration }}\extract-xiso.exe, LICENSE.TXT artifacts
        cd artifacts
        powershell Compress-Archive . ../extract-xiso-${{ matrix.artifact_os }}_${{ matrix.configuration }}.zip
    - uses: actions/upload-artifact@v4
      with:
        name: extract-xiso_${{ matrix.artifact_os }}_${{ matrix.configuration }}
        path: extract-xiso-${{ matrix.artifact_os }}_${{ matrix.configuration }}.zip

  build-linux:
    runs-on: ubuntu-latest
    needs: Init
    steps:
    - uses: actions/checkout@v2
    - name: CMake generate
      run: |
        mkdir build && cd build
        cmake ..
    - name: Build
      working-directory: build
      run: cmake --build . -j $(nproc --all)
    - name: Prepare artifacts
      run: |
        mkdir artifacts
        mv -v build/extract-xiso LICENSE.TXT artifacts
        cd artifacts
        zip -r ../extract-xiso_${{ runner.os }}.zip *
    - uses: actions/upload-artifact@v4
      with:
        name: extract-xiso_${{ runner.os }}
        path: extract-xiso_${{ runner.os }}.zip

  build-macos:
    runs-on: macos-latest
    needs: Init
    steps:
    - uses: actions/checkout@v2
    - name: CMake generate
      run: |
        mkdir build && cd build
        cmake ..
    - name: Build
      working-directory: build
      run: cmake --build . -j $(sysctl -n hw.ncpu)
    - name: Prepare artifacts
      run: |
        mkdir artifacts
        mv -v build/extract-xiso LICENSE.TXT artifacts
        cd artifacts
        zip -r ../extract-xiso_${{ runner.os }}.zip *
    - uses: actions/upload-artifact@v4
      with:
        name: extract-xiso_${{ runner.os }}
        path: extract-xiso_${{ runner.os }}.zip

  Release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: [build-windows, build-linux, build-macos]
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist
    - name: Get package info
      run: |
        echo "BUILD_TAG=$(cat dist/tag/tag)" >> $GITHUB_ENV
    - name: Create release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.BUILD_TAG }}
        name: ${{ env.BUILD_TAG }}
        prerelease: false
        draft: false
        files: dist/*/*.zip
